/* ---------------------
   SQL E-commerce Project
   --------------------- */

-- 1. What is the total revenue generated by each product category?

SELECT 
    p.category_id, 
    c.category_name,
    SUM(o.quantity * p.price) AS total_revenue
FROM ecom_orders o
JOIN ecom_products p ON o.product_id = p.product_id
JOIN ecom_categories c ON p.category_id = c.category_id
GROUP BY p.category_id, c.category_name
ORDER BY total_revenue DESC;

-- 2. How many customers have made a purchase in each country?

SELECT 
    c.country, 
    COUNT(DISTINCT o.customer_id) AS customer_count
FROM ecom_customers c
JOIN ecom_orders o ON c.customer_id = o.customer_id
GROUP BY c.country
ORDER BY customer_count DESC;

-- 3. What are the top 5 best-selling products?

SELECT 
    p.product_id, 
    p.product_name,
    SUM(o.quantity) AS total_sold
FROM ecom_products p
JOIN ecom_orders o ON p.product_id = o.product_id
GROUP BY p.product_id, p.product_name
ORDER BY total_sold DESC
LIMIT 5;

-- 4. Who are the top 3 customers with the highest total spending?

SELECT 
    o.customer_id, 
    c.customer_name,
    SUM(o.quantity * p.price) AS total_spending
FROM ecom_orders o
JOIN ecom_products p ON o.product_id = p.product_id
JOIN ecom_customers c ON o.customer_id = c.customer_id
GROUP BY o.customer_id, c.customer_name
ORDER BY total_spending DESC
LIMIT 3;

-- 5. What is the average order value for each month in 2023?

SELECT 
    EXTRACT(MONTH FROM o.order_date) AS order_month,
    AVG(o.quantity * p.price) AS avg_order_value
FROM ecom_orders o
JOIN ecom_products p ON o.product_id = p.product_id
WHERE EXTRACT(YEAR FROM o.order_date) = 2023
GROUP BY order_month
ORDER BY order_month;

-- 6. How many products in each category have a price above the category's average price?

WITH category_avg_price AS (
    SELECT 
        c.category_id, 
        AVG(p.price) AS avg_price
    FROM ecom_categories c
    JOIN ecom_products p ON c.category_id = p.category_id
    GROUP BY c.category_id
)
SELECT 
    c.category_id, 
    c.category_name,
    COUNT(*) AS products_above_avg_price
FROM ecom_categories c
JOIN ecom_products p ON c.category_id = p.category_id
JOIN category_avg_price a ON c.category_id = a.category_id
WHERE p.price > a.avg_price
GROUP BY c.category_id, c.category_name;

-- 7. Which products have been out of stock for more than 30 days?

SELECT 
    p.product_id, 
    p.product_name
FROM ecom_products p
WHERE p.product_id NOT IN (
    SELECT DISTINCT product_id
    FROM ecom_orders
    WHERE order_date >= DATE_SUB(NOW(), INTERVAL 30 DAY)
);

-- 8. What is the total profit for each product category? (Profit is calculated as revenue - cost)

SELECT 
    p.category_id, 
    c.category_name,
    SUM(o.quantity * (p.price - p.cost)) AS total_profit
FROM ecom_orders o
JOIN ecom_products p ON o.product_id = p.product_id
JOIN ecom_categories c ON p.category_id = c.category_id
GROUP BY p.category_id, c.category_name
ORDER BY total_profit DESC;

-- 9. How many new customers (first-time buyers) were acquired each month in 2023?

SELECT 
    EXTRACT(MONTH FROM o.order_date) AS acquisition_month,
    COUNT(DISTINCT o.customer_id) AS new_customer_count
FROM ecom_orders o
WHERE EXTRACT(YEAR FROM o.order_date) = 2023
AND o.customer_id NOT IN (
    SELECT DISTINCT customer_id
    FROM ecom_orders
    WHERE order_date < DATEADD(YEAR, -1, o.order_date)
)
GROUP BY acquisition_month
ORDER BY acquisition_month;

-- 10. What is the total number of products returned by each customer?

SELECT 
    r.customer_id, 
    c.customer_name,
    COUNT(r.product_id) AS total_products_returned
FROM ecom_returns r
JOIN ecom_customers c ON r.customer_id = c.customer_id
GROUP BY r.customer_id, c.customer_name
ORDER BY total_products_returned DESC;
